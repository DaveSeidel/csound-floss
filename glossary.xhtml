<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" epub:prefix="z3998: http://www.daisy.org/z3998/2012/vocab/structure/#" lang="en" xml:lang="en">
  <head>
    <title>GLOSSARY</title>
  </head>
  <body><h1>GLOSSARY</h1><p> </p>
<p><strong>control cycle</strong>, <strong>control period</strong>
or <strong>k-loop</strong> is a pass during the performance of an
instrument, in which all k- and a-variables are renewed. The time
for one control cycle is measured in samples and determined by the
<a href="http://www.csounds.com/manual/html/ksmps.html">ksmps</a>
constant in the orchestra header. If your sample rate is 44100 and
your ksmps value is 10, the time for one control cycle is 1/4410 =
0.000227 seconds. See the chapter about <a href="http://en.flossmanuals.net/bin/view/Csound/InitAndPerfPass">Initialization
And Performance Pass</a> for more information.</p>
<p> </p>
<p><strong>control rate</strong> or <strong>k-rate</strong>
(<a href="http://www.csounds.com/manual/html/kr.html">kr</a>) is
the number of control cycles per second. It can be calculated as
the relationship of the sample rate <a href="http://www.csounds.com/manual/html/sr.html">sr</a> and the number
of samples in one control period <a href="http://www.csounds.com/manual/html/ksmps.html">ksmps</a>. If your
sample rate is 44100 and your ksmps value is 10, your control rate
is 4410, so you have 4410 control cycles per second.</p>
<p> </p>
<p><strong>dummy f-statement</strong> see
<strong>f-statement</strong></p>
<p> </p>
<p><strong>f-statement</strong> or <strong>function table
statement</strong> is a score line which starts with a "f" and
generates a function table. See the chapter about <a href="http://en.flossmanuals.net/bin/view/Csound/FUNCTIONTABLES">function
tables</a> for more information. A <strong>dummy
f-statement</strong> is a statement like "f 0 3600" which looks
like a function table statement, but instead of generating any
table, it serves just for running Csound for a certain time (here
3600 seconds = 1 hour).</p>
<p> </p>
<p> </p>
<p><strong>FFT</strong> Fast Fourier Transform is a system whereby
audio data is stored or represented in the frequency domain as
opposed to the time domain as amplitude values as is more typical.
Working with FFT data facilitates transformations and manipulations
that are not possible, or are at least more difficult, with audio
data stored in other formats.</p>
<p> </p>
<p> </p>
<p><strong>GEN rountine</strong> a GEN (generation) routine is a
mechanism within Csound used to create function tables of data that
will be held in RAM for all or part of the performance. A GEN
routine could be a waveform, a stored sound sample, a list of
explicitly defined number such as tunings for a special musical
scale or an amplitude envelope. In the past function tables could
only be created only in the Csound score but now they can also be
created (and deleted and over-written) within the orchestra.</p>
<p> </p>
<p><strong>GUI</strong> Graphical User Interface refers to a system
of on-screen sliders, buttons etc. used to interact with Csound,
normally in realtime.</p>
<p> </p>
<p><strong>i-time</strong> or <strong>init-time</strong> or
<strong>i-rate</strong> signify the time in which all the variables
starting with an "i" get their values. These values are just given
once for an instrument call. See the chapter about <a href="http://en.flossmanuals.net/bin/view/Csound/InitAndPerfPass">Initialization
And Performance Pass</a> for more information.</p>
<p> </p>
<p><strong>k-loop</strong> see <strong>control cycle</strong></p>
<p> </p>
<p><strong>k-time</strong> is the time during the performance of an
instrument, after the initialization. Variables starting with a "k"
can alter their values in each -&gt;control cycle. See the chapter
about <a href="http://en.flossmanuals.net/bin/view/Csound/InitAndPerfPass">Initialization
And Performance Pass</a> for more information.</p>
<p> </p>
<p><strong>k-rate</strong> see <strong>control rate</strong></p>
<p> </p>
<p> </p>
<p><strong>opcode</strong> the code word of a basic building block
with which Csound code is written. As well as the opcode code word
an opcode will commonly provide output arguments (variables),
listed to the left of the opcode, and input arguments (variables).
listed to the right of the opcode. An opcode is equivalent to a
'ugen' (unit generator) in other languages.</p>
<p> </p>
<p><strong>orchestra</strong> as in the Csound orchestra, is the
section of Csound code where traditionally the instruments are
written. In the past the 'orchestra' was one of two text files
along with the 'score' that were needed to run Csound. Most people
nowadays combine these two sections, along with other optional
sections in a .csd (unified) Csound file. The orchestra will also
normally contain header statements which will define global aspects
of the Csound performance such as sampling rate.</p>
<p> </p>
<p><strong>p-field</strong> a 'p' (parameter) field normally refers
to a value contained within the list of values after an event item
with the Csound score.</p>
<p> </p>
<p><strong>performance pass</strong> see <strong>control
cycle</strong></p>
<p> </p>
<p><strong>score</strong> as in the Csound score, is the section of
Csound code where note events are written that will instruct
instruments within the Csound orchestra to play. The score can also
contain function tables. In the past the 'score' was one of two
text files along with the 'orchestra' that were needed to run
Csound. Most people nowadays combine these two sections, along with
other optional sections in a .csd (unified) Csound file.</p>
<p> </p>
<p><strong>time stretching</strong> can be done in various ways in
Csound. See <a href="http://www.csounds.com/manual/html/sndwarp.html">sndwarp</a>,
<a href="http://www.csounds.com/manual/html/waveset.html">waveset</a>,
<a href="http://www.csounds.com/manual/html/pvstanal.html">pvstanal</a>
<a href="http://www.csounds.com/manual/html/mincer.html">mincer</a>,
<a href="http://www.csounds.com/manual/html/pvsfread.html">pvsfread</a>,
<a href="http://www.csounds.com/manual/html/pvsdiskin.html">pvsdiskin</a>
and the Granular Synthesis opcodes.</p>
<p> </p>
<p> </p>
<p><strong>widget</strong> normally refers to some sort of standard
GUI element such as a slider or a button. GUI widgets normally
permit some user modifications such as size, positioning colours
etc. A variety options are available for the creation of widgets
usable by Csound, from it own built-in FLTK widgets to those
provided by front-ends such as CsoundQT, Cabbage and Blue.</p>
<p> </p>
</body>
</html>
