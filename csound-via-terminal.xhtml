<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" epub:prefix="z3998: http://www.daisy.org/z3998/2012/vocab/structure/#" lang="en" xml:lang="en">
  <head>
    <title>CSOUND VIA TERMINAL</title>
  </head>
  <body><h1>CSOUND VIA TERMINAL</h1><p>Whilst many of us now interact with Csound through one of its
many front-ends which provide us with an experience more akin the
that of mainstream software, new-comers to Csound should bear in
mind that there was a time when the only way running Csound was
from the command line using the <a href="http://www.csounds.com/manual/html/CommandTop.html">Csound
command</a>. In fact we must still run Csound in this way but
front-ends do this for us usually via some toolbar button or
widget. Many people still prefer to interact with Csound from a
terminal window and feel this provides a more 'naked' and honest
interfacing with the program. Very often these people come from the
group of users who have been using Csound for many years, form the
time before front-ends. It is still important for all users to be
aware of how to run Csound from the terminal as it provides a
useful backup if problems develop with a preferred front-end.</p>
<h2>The Csound Command<br/></h2>
<p>The Csound command follows the format:</p>
<pre>csound [performance_flags] [input_orc/sco/csd]
</pre>
<p>Executing 'csound' with no additional arguments will run the
program but after a variety of configuration information is printed
to the terminal we will be informed that we provided "insufficient
arguments" for Csound to do anything useful. This action can still
be valid for first testing if Csound is installed and configured
for terminal use, for checking what version is installed and for
finding out what performance flags are available without having to
refer to the manual.</p>
<p>Performance flags are controls that can be used to define how
Csound will run. All of these flags have defaults but we can make
explicitly use flags and change these defaults to do useful things
like controlling the amount of information that Csound displays for
us while running, activating a MIDI device for input, or altering
buffer sizes for fine tuning realtime audio performance. Even if
you are using a front-end, command line flags can be manipulated in
a familiar format usually in 'settings' or 'preferences' menu.
Adding flags here will have the same effect as adding them as part
of the Csound command. To learn more about Csound's command line
flags it is best to start on the page in the reference manual where
they are listed and described <a href="http://www.csounds.com/manual/html/CommandFlagsCategory.html">by
category</a>.</p>
<p>Command line flags can also be defined within the
&lt;CsOptions&gt; &lt;/CsOptions&gt; part of a .csd file and also
in a file called .csoundrc which can be located in the Csound home
program directory and/or in the current working directory. Having
all these different options for where esentially the same
information is stored might seem excessive but it is really just to
allow flexibiliy in how users can make changes to how Csound runs,
depending on the situation and in the most efficient way possible.
This does however bring up one one issue in that if a particular
command line flag has been set in two different places, how does
Csound know which one to choose? There is an order of precedence
that allows us to find out.</p>
<p>Beginning from its own defaults the first place Csound looks for
additional flag options is in the .csoundrc file in Csound's home
directory, the next is in a .csoundrc file in the current working
directory (if it exists), the next is in the &lt;CsOptions&gt; of
the .csd and finally the Csound command itself. Flags that are read
later in this list will overwrite earlier ones. Where flags have
been set within a front-end's options, these will normally
overwrite any previous instructions for that flag as they form part
of the Csound command. Often a front-end will incorporate a
check-box for disabling its own inclusion of flag (without actually
having to delete them from the dialogue window).</p>
<p>After the command line flags (if any) have been declared in the
Csound command, we provide the name(s) of out input file(s) -
originally this would have been the orchestra (.orc) and score
(.sco) file but this arrangement has now all but been replaced by
the more recently introduced .csd (unified orchestra and score)
file. The facility to use a separate orchestra and score file
remains however.</p>
<p>For example:</p>
<pre>Csound -d -W -osoundoutput.wav inputfile.csd
</pre>
<p>will run Csound and render the input .csd 'inputfile.csd' as a
wav file ('-W' flag) to the file 'soundoutput.wav' ('-o' flag).
Additionally displays will be suppressed as dictated by the '-d'
flag. The input .csd file will need to be in the current working
directory as no full path has been provided. the output file will
be written to the current working directory of <a href="http://www.csounds.com/manual/html/CommandEnvironment.html">SFDIR</a>
if specified.<br/></p>
<p><br/></p>
</body>
</html>
